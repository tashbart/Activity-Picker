name: Approve suggestions -> append to suggestions.json
on:
  issues:
    types: [labeled]

permissions:
  contents: write
  issues: read

jobs:
  append:
    if: github.event.label.name == 'approved'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract fields from issue body
        id: parse
        uses: actions/github-script@v7
        with:
          script: |
            const body = context.payload.issue.body || "";

            function get(section){
              // Issue Forms render as markdown headings: "### Activity" then the value on next line(s).
              const re = new RegExp(`###\\s+${section}\\s*\\n+([^#]+)`, 'i');
              const m = body.match(re);
              return m ? m[1].trim().replace(/\r/g,'').split('\n')[0].trim() : "";
            }

            const activity = get("Activity");
            const category = get("Category");
            const tagsRaw  = get("Tags");

            if(!activity || !category || !tagsRaw){
              core.setFailed("Could not parse issue body fields.");
            }

            core.setOutput("activity", activity);
            core.setOutput("category", category);
            core.setOutput("tags", tagsRaw);

      - name: Append to suggestions.json
        id: append
        run: |
          node -e '
          const fs=require("fs");
          const path="suggestions.json";
          const data=JSON.parse(fs.readFileSync(path,"utf8"));
          const activity=process.env.ACT;
          const category=process.env.CAT;
          const tags=(process.env.TAGS||"").split(";").map(s=>s.trim()).filter(Boolean);
          data.push({ name:activity, category, tags });
          fs.writeFileSync(path, JSON.stringify(data, null, 2)+"\n");
          ' 
        env:
          ACT: ${{ steps.parse.outputs.activity }}
          CAT: ${{ steps.parse.outputs.category }}
          TAGS: ${{ steps.parse.outputs.tags }}

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add suggestions.json
          git commit -m "approve: add ${ACT}" || echo "No changes"
          git push
        env:
          ACT: ${{ steps.parse.outputs.activity }}
